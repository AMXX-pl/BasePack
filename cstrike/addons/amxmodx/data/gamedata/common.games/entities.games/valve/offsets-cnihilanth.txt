/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CNihilanth"
			{
				"Offsets"
				{
					"m_flForce"  // float
					{
						"type"      "float"

						"windows"   "660"
						"linux"     "680"
						"mac"       "680"
					}

					"m_flNextPainSound"  // float
					{
						"type"      "float"

						"windows"   "664"
						"linux"     "684"
						"mac"       "684"
					}

					"m_velocity"  // Vector
					{
						"type"      "vector"

						"windows"   "668"
						"linux"     "688"
						"mac"       "688"
					}

					"m_avelocity"  // Vector
					{
						"type"      "vector"

						"windows"   "680"
						"linux"     "700"
						"mac"       "700"
					}

					"m_vecTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "692"
						"linux"     "712"
						"mac"       "712"
					}

					"m_posTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "704"
						"linux"     "724"
						"mac"       "724"
					}

					"m_vecDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "716"
						"linux"     "736"
						"mac"       "736"
					}

					"m_posDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "728"
						"linux"     "748"
						"mac"       "748"
					}

					"m_flMinZ"  // float
					{
						"type"      "float"

						"windows"   "740"
						"linux"     "760"
						"mac"       "760"
					}

					"m_flMaxZ"  // float
					{
						"type"      "float"

						"windows"   "744"
						"linux"     "764"
						"mac"       "764"
					}

					"m_vecGoal"  // Vector
					{
						"type"      "vector"

						"windows"   "748"
						"linux"     "768"
						"mac"       "768"
					}

					"m_flLastSeen"  // float
					{
						"type"      "float"

						"windows"   "760"
						"linux"     "780"
						"mac"       "780"
					}

					"m_flPrevSeen"  // float
					{
						"type"      "float"

						"windows"   "764"
						"linux"     "784"
						"mac"       "784"
					}

					"m_irritation"  // int
					{
						"type"      "integer"

						"windows"   "768"
						"linux"     "788"
						"mac"       "788"
					}

					"m_iLevel"  // int
					{
						"type"      "integer"

						"windows"   "772"
						"linux"     "792"
						"mac"       "792"
					}

					"m_iTeleport"  // int
					{
						"type"      "integer"

						"windows"   "776"
						"linux"     "796"
						"mac"       "796"
					}

					"m_hRecharger"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "780"
						"linux"     "800"
						"mac"       "800"
					}

					"m_hSphere"  // EHANDLE[20]
					{
						"type"      "ehandle"
						"size"      "20"

						"windows"   "788"
						"linux"     "808"
						"mac"       "808"
					}

					"m_iActiveSpheres"  // int
					{
						"type"      "integer"

						"windows"   "948"
						"linux"     "968"
						"mac"       "968"
					}

					"m_flAdj"  // float
					{
						"type"      "float"

						"windows"   "952"
						"linux"     "972"
						"mac"       "972"
					}

					"m_pBall"  // CSprite*
					{
						"type"      "classptr"

						"windows"   "956"
						"linux"     "976"
						"mac"       "976"
					}

					"m_szRechargerTarget"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "960"
						"linux"     "980"
						"mac"       "980"
					}

					"m_szDrawUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1024"
						"linux"     "1044"
						"mac"       "1044"
					}

					"m_szTeleportUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1088"
						"linux"     "1108"
						"mac"       "1108"
					}

					"m_szTeleportTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1152"
						"linux"     "1172"
						"mac"       "1172"
					}

					"m_szDeadUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1216"
						"linux"     "1236"
						"mac"       "1236"
					}

					"m_szDeadTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1280"
						"linux"     "1300"
						"mac"       "1300"
					}

					"m_flShootEnd"  // float
					{
						"type"      "float"

						"windows"   "1344"
						"linux"     "1364"
						"mac"       "1364"
					}

					"m_flShootTime"  // float
					{
						"type"      "float"

						"windows"   "1348"
						"linux"     "1368"
						"mac"       "1368"
					}

					"m_hFriend"  // EHANDLE[3]
					{
						"type"      "ehandle"
						"size"      "3"

						"windows"   "1352"
						"linux"     "1372"
						"mac"       "1372"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseMonster
 *                     CNihilanth
 */
