/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CNihilanth"
			{
				"Offsets"
				{
					"m_flForce"  // float
					{
						"type"      "float"

						"windows"   "708"
						"linux"     "728"
						"mac"       "728"
					}

					"m_flNextPainSound"  // float
					{
						"type"      "float"

						"windows"   "712"
						"linux"     "732"
						"mac"       "732"
					}

					"m_velocity"  // Vector
					{
						"type"      "vector"

						"windows"   "716"
						"linux"     "736"
						"mac"       "736"
					}

					"m_avelocity"  // Vector
					{
						"type"      "vector"

						"windows"   "728"
						"linux"     "748"
						"mac"       "748"
					}

					"m_vecTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "740"
						"linux"     "760"
						"mac"       "760"
					}

					"m_posTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "752"
						"linux"     "772"
						"mac"       "772"
					}

					"m_vecDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "764"
						"linux"     "784"
						"mac"       "784"
					}

					"m_posDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "776"
						"linux"     "796"
						"mac"       "796"
					}

					"m_flMinZ"  // float
					{
						"type"      "float"

						"windows"   "788"
						"linux"     "808"
						"mac"       "808"
					}

					"m_flMaxZ"  // float
					{
						"type"      "float"

						"windows"   "792"
						"linux"     "812"
						"mac"       "812"
					}

					"m_vecGoal"  // Vector
					{
						"type"      "vector"

						"windows"   "796"
						"linux"     "816"
						"mac"       "816"
					}

					"m_flLastSeen"  // float
					{
						"type"      "float"

						"windows"   "808"
						"linux"     "828"
						"mac"       "828"
					}

					"m_flPrevSeen"  // float
					{
						"type"      "float"

						"windows"   "812"
						"linux"     "832"
						"mac"       "832"
					}

					"m_irritation"  // int
					{
						"type"      "integer"

						"windows"   "816"
						"linux"     "836"
						"mac"       "836"
					}

					"m_iLevel"  // int
					{
						"type"      "integer"

						"windows"   "820"
						"linux"     "840"
						"mac"       "840"
					}

					"m_iTeleport"  // int
					{
						"type"      "integer"

						"windows"   "824"
						"linux"     "844"
						"mac"       "844"
					}

					"m_hRecharger"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "828"
						"linux"     "848"
						"mac"       "848"
					}

					"m_hSphere"  // EHANDLE[20]
					{
						"type"      "ehandle"
						"size"      "20"

						"windows"   "836"
						"linux"     "856"
						"mac"       "856"
					}

					"m_iActiveSpheres"  // int
					{
						"type"      "integer"

						"windows"   "996"
						"linux"     "1016"
						"mac"       "1016"
					}

					"m_flAdj"  // float
					{
						"type"      "float"

						"windows"   "1000"
						"linux"     "1020"
						"mac"       "1020"
					}

					"m_pBall"  // CSprite*
					{
						"type"      "classptr"

						"windows"   "1004"
						"linux"     "1024"
						"mac"       "1024"
					}

					"m_szRechargerTarget"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1008"
						"linux"     "1028"
						"mac"       "1028"
					}

					"m_szDrawUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1072"
						"linux"     "1092"
						"mac"       "1092"
					}

					"m_szTeleportUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1136"
						"linux"     "1156"
						"mac"       "1156"
					}

					"m_szTeleportTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1200"
						"linux"     "1220"
						"mac"       "1220"
					}

					"m_szDeadUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1264"
						"linux"     "1284"
						"mac"       "1284"
					}

					"m_szDeadTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1328"
						"linux"     "1348"
						"mac"       "1348"
					}

					"m_flShootEnd"  // float
					{
						"type"      "float"

						"windows"   "1392"
						"linux"     "1412"
						"mac"       "1412"
					}

					"m_flShootTime"  // float
					{
						"type"      "float"

						"windows"   "1396"
						"linux"     "1416"
						"mac"       "1416"
					}

					"m_hFriend"  // EHANDLE[3]
					{
						"type"      "ehandle"
						"size"      "3"

						"windows"   "1400"
						"linux"     "1420"
						"mac"       "1420"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseMonster
 *                     CNihilanth
 */
