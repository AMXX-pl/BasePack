/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CAreaCapture"
			{
				"Offsets"
				{
					"m_iCapMode"  // int
					{
						"type"      "integer"

						"windows"   "492"
						"linux"     "512"
						"mac"       "512"
					}

					"m_bCapturing"  // int
					{
						"type"      "integer"

						"windows"   "496"
						"linux"     "516"
						"mac"       "516"
					}

					"m_nCapturingTeam"  // int
					{
						"type"      "integer"

						"windows"   "500"
						"linux"     "520"
						"mac"       "520"
					}

					"m_nOwningTeam"  // int
					{
						"type"      "integer"

						"windows"   "504"
						"linux"     "524"
						"mac"       "524"
					}

					"m_nCapTime"  // int
					{
						"type"      "integer"

						"windows"   "508"
						"linux"     "528"
						"mac"       "528"
					}

					"m_fTimeRemaining"  // float
					{
						"type"      "float"

						"windows"   "512"
						"linux"     "532"
						"mac"       "532"
					}

					"m_nAlliesNumCap"  // int
					{
						"type"      "integer"

						"windows"   "516"
						"linux"     "536"
						"mac"       "536"
					}

					"m_nAxisNumCap"  // int
					{
						"type"      "integer"

						"windows"   "520"
						"linux"     "540"
						"mac"       "540"
					}

					"m_nNumAllies"  // int
					{
						"type"      "integer"

						"windows"   "524"
						"linux"     "544"
						"mac"       "544"
					}

					"m_nNumAxis"  // int
					{
						"type"      "integer"

						"windows"   "528"
						"linux"     "548"
						"mac"       "548"
					}

					"m_bAlliesCanCap"  // bool
					{
						"type"      "boolean"

						"windows"   "532"
						"linux"     "552"
						"mac"       "552"
					}

					"m_bAxisCanCap"  // bool
					{
						"type"      "boolean"

						"windows"   "533"
						"linux"     "553"
						"mac"       "553"
					}

					"m_iCappingRequired"  // int
					{
						"type"      "integer"

						"windows"   "536"
						"linux"     "556"
						"mac"       "556"
					}

					"m_iCappingPlayers"  // int
					{
						"type"      "integer"

						"windows"   "540"
						"linux"     "560"
						"mac"       "560"
					}

					"sz_AlliesCap"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "544"
						"linux"     "564"
						"mac"       "564"
					}

					"sz_AxisCap"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "800"
						"linux"     "820"
						"mac"       "820"
					}

					"sz_AlliesStart"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "1056"
						"linux"     "1076"
						"mac"       "1076"
					}

					"sz_AxisStart"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "1312"
						"linux"     "1332"
						"mac"       "1332"
					}

					"sz_AlliesBreak"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "1568"
						"linux"     "1588"
						"mac"       "1588"
					}

					"sz_AxisBreak"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "1824"
						"linux"     "1844"
						"mac"       "1844"
					}

					"m_iAreaIndex"  // int
					{
						"type"      "integer"

						"windows"   "2080"
						"linux"     "2100"
						"mac"       "2100"
					}

					"sz_HudIcon"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "2084"
						"linux"     "2104"
						"mac"       "2104"
					}

					"m_pPoint"  // CControlPoint*
					{
						"type"      "classptr"

						"windows"   "2340"
						"linux"     "2360"
						"mac"       "2360"
					}

					"sz_CapPointName"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "2344"
						"linux"     "2364"
						"mac"       "2364"
					}

					"sz_RequiredObjectGroup"  // char[256]
					{
						"type"      "string"
						"size"      "256"

						"windows"   "2600"
						"linux"     "2620"
						"mac"       "2620"
					}

					"m_bRequiresObject"  // bool
					{
						"type"      "boolean"

						"windows"   "2856"
						"linux"     "2876"
						"mac"       "2876"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseTrigger
 *                     CAreaCapture
 */
