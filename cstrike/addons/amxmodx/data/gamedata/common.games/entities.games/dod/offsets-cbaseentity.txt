/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CBaseEntity"
			{
				"Offsets"
				{
					"pev"  // entvars_t*
					{
						"type"      "entvars"

						"windows"   "4"
						"linux"     "4"
						"mac"       "4"
					}

					"m_pGoalEnt"  // CBaseEntity*
					{
						"type"      "classptr"

						"windows"   "8"
						"linux"     "8"
						"mac"       "8"
					}

					"m_pLink"  // CBaseEntity*
					{
						"type"      "classptr"

						"windows"   "12"
						"linux"     "12"
						"mac"       "12"
					}

					"m_rrOrigin"  // Vector
					{
						"type"      "vector"

						"windows"   "16"
						"linux"     "16"
						"mac"       "16"
					}

					"m_rrMins"  // Vector
					{
						"type"      "vector"

						"windows"   "28"
						"linux"     "28"
						"mac"       "28"
					}

					"m_rrMaxs"  // Vector
					{
						"type"      "vector"

						"windows"   "40"
						"linux"     "40"
						"mac"       "40"
					}

					"m_rrAngles"  // Vector
					{
						"type"      "vector"

						"windows"   "52"
						"linux"     "52"
						"mac"       "52"
					}

					"m_rrMovedir"  // Vector
					{
						"type"      "vector"

						"windows"   "64"
						"linux"     "64"
						"mac"       "64"
					}

					"m_rrSpawnflags"  // int
					{
						"type"      "integer"

						"windows"   "76"
						"linux"     "76"
						"mac"       "76"
					}

					"m_rrSolid"  // int
					{
						"type"      "integer"

						"windows"   "80"
						"linux"     "80"
						"mac"       "80"
					}

					"m_rrMovetype"  // int
					{
						"type"      "integer"

						"windows"   "84"
						"linux"     "84"
						"mac"       "84"
					}

					"m_rrEffects"  // int
					{
						"type"      "integer"

						"windows"   "88"
						"linux"     "88"
						"mac"       "88"
					}

					"m_rrFlags"  // int
					{
						"type"      "integer"

						"windows"   "92"
						"linux"     "92"
						"mac"       "92"
					}

					"m_rrFrags"  // int
					{
						"type"      "integer"

						"windows"   "96"
						"linux"     "96"
						"mac"       "96"
					}

					"m_rrRendermode"  // int
					{
						"type"      "integer"

						"windows"   "100"
						"linux"     "100"
						"mac"       "100"
					}

					"m_rrRenderamt"  // float
					{
						"type"      "float"

						"windows"   "104"
						"linux"     "104"
						"mac"       "104"
					}

					"m_rrRendercolor"  // Vector
					{
						"type"      "vector"

						"windows"   "108"
						"linux"     "108"
						"mac"       "108"
					}

					"m_rrRenderfx"  // int
					{
						"type"      "integer"

						"windows"   "120"
						"linux"     "120"
						"mac"       "120"
					}

					"m_rrHealth"  // float
					{
						"type"      "float"

						"windows"   "124"
						"linux"     "124"
						"mac"       "124"
					}

					"m_rrFrame"  // float
					{
						"type"      "float"

						"windows"   "128"
						"linux"     "128"
						"mac"       "128"
					}

					"m_rrSpeed"  // float
					{
						"type"      "float"

						"windows"   "132"
						"linux"     "132"
						"mac"       "132"
					}

					"m_rrTarget"  // string_t
					{
						"type"      "stringint"

						"windows"   "136"
						"linux"     "136"
						"mac"       "136"
					}

					"m_rrTargetname"  // string_t
					{
						"type"      "stringint"

						"windows"   "140"
						"linux"     "140"
						"mac"       "140"
					}

					"m_rrNetname"  // string_t
					{
						"type"      "stringint"

						"windows"   "144"
						"linux"     "144"
						"mac"       "144"
					}

					"m_rrTakedamage"  // float
					{
						"type"      "float"

						"windows"   "148"
						"linux"     "148"
						"mac"       "148"
					}

					"m_rrScale"  // float
					{
						"type"      "float"

						"windows"   "152"
						"linux"     "152"
						"mac"       "152"
					}

					"m_rrGravity"  // float
					{
						"type"      "float"

						"windows"   "156"
						"linux"     "156"
						"mac"       "156"
					}

					"m_pfnThink"  // (*__pfn)(CBaseEntity*)
					{
						"type"      "function"

						"windows"   "160"
						"linux"     "160"
						"mac"       "160"
					}

					"m_pfnTouch"  // (*__pfn)(CBaseEntity*, CBaseEntity*)
					{
						"type"      "function"

						"windows"   "164"
						"linux"     "168"
						"mac"       "168"
					}

					"m_pfnUse"  // (*__pfn)(CBaseEntity*, CBaseEntity*, CBaseEntity*, USE_TYPE, float)
					{
						"type"      "function"

						"windows"   "168"
						"linux"     "176"
						"mac"       "176"
					}

					"m_pfnBlocked"  // (*__pfn)(CBaseEntity*, CBaseEntity*)
					{
						"type"      "function"

						"windows"   "172"
						"linux"     "184"
						"mac"       "184"
					}

					"has_disconnected"  // BOOL
					{
						"type"      "integer"

						"windows"   "176"
						"linux"     "192"
						"mac"       "192"
					}

					"ammo_9mm"  // int
					{
						"type"      "integer"

						"windows"   "180"
						"linux"     "196"
						"mac"       "196"
					}

					"ammo_357"  // int
					{
						"type"      "integer"

						"windows"   "184"
						"linux"     "200"
						"mac"       "200"
					}

					"ammo_bolts"  // int
					{
						"type"      "integer"

						"windows"   "188"
						"linux"     "204"
						"mac"       "204"
					}

					"ammo_buckshot"  // int
					{
						"type"      "integer"

						"windows"   "192"
						"linux"     "208"
						"mac"       "208"
					}

					"ammo_rockets"  // int
					{
						"type"      "integer"

						"windows"   "196"
						"linux"     "212"
						"mac"       "212"
					}

					"ammo_uranium"  // int
					{
						"type"      "integer"

						"windows"   "200"
						"linux"     "216"
						"mac"       "216"
					}

					"ammo_hornets"  // int
					{
						"type"      "integer"

						"windows"   "204"
						"linux"     "220"
						"mac"       "220"
					}

					"ammo_argrens"  // int
					{
						"type"      "integer"

						"windows"   "208"
						"linux"     "224"
						"mac"       "224"
					}

					"ammo_12mm"  // int
					{
						"type"      "integer"

						"windows"   "212"
						"linux"     "228"
						"mac"       "228"
					}

					"ammo_16mm"  // int
					{
						"type"      "integer"

						"windows"   "216"
						"linux"     "232"
						"mac"       "232"
					}

					"ammo_22mm"  // int
					{
						"type"      "integer"

						"windows"   "220"
						"linux"     "236"
						"mac"       "236"
					}

					"ammo_44mm"  // int
					{
						"type"      "integer"

						"windows"   "224"
						"linux"     "240"
						"mac"       "240"
					}

					"ammo_55mm"  // int
					{
						"type"      "integer"

						"windows"   "228"
						"linux"     "244"
						"mac"       "244"
					}

					"ammo_66mm"  // int
					{
						"type"      "integer"

						"windows"   "232"
						"linux"     "248"
						"mac"       "248"
					}

					"ammo_agrens"  // int
					{
						"type"      "integer"

						"windows"   "236"
						"linux"     "252"
						"mac"       "252"
					}

					"ammo_agrensex"  // int
					{
						"type"      "integer"

						"windows"   "240"
						"linux"     "256"
						"mac"       "256"
					}

					"ammo_ggrens"  // int
					{
						"type"      "integer"

						"windows"   "244"
						"linux"     "260"
						"mac"       "260"
					}

					"ammo_ggrensex"  // int
					{
						"type"      "integer"

						"windows"   "248"
						"linux"     "264"
						"mac"       "264"
					}

					"m_flStartThrow"  // float
					{
						"type"      "float"

						"windows"   "252"
						"linux"     "268"
						"mac"       "268"
					}

					"m_flReleaseThrow"  // float
					{
						"type"      "float"

						"windows"   "256"
						"linux"     "272"
						"mac"       "272"
					}

					"m_chargeReady"  // int
					{
						"type"      "integer"

						"windows"   "260"
						"linux"     "276"
						"mac"       "276"
					}

					"m_fInAttack"  // int
					{
						"type"      "integer"

						"windows"   "264"
						"linux"     "280"
						"mac"       "280"
					}

					"m_fireState"  // int
					{
						"type"      "integer"

						"windows"   "268"
						"linux"     "284"
						"mac"       "284"
					}

					"m_trDecalTrace"  // TraceResult
					{
						"type"      "structure"

						"windows"   "272"
						"linux"     "288"
						"mac"       "288"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CAmbientGeneric
 *     CBaseDelay
 *         CAutoTrigger
 *         CBaseAnimating
 *             CBasePlayerItem
 *                 CBasePlayerWeapon
 *                     CBipodWeapon
 *                         C30CAL
 *                         CBAR
 *                         CBREN
 *                         CMG34
 *                         CMG42
 *                     CDoDGrenade
 *                         CDoDGrenadeEx
 *                             CHandGrenadeEx
 *                             CStickGrenadeEx
 *                         CHandGrenade
 *                         CStickGrenade
 *                     CENFIELD
 *                     CFG42
 *                     CGarand
 *                     CGreaseGun
 *                     CK43
 *                     CKAR
 *                     CM1Carbine
 *                     CMP40
 *                     CMP44
 *                     CMeleeWeapon
 *                         CAmerKnife
 *                         CGerKnife
 *                         CSpade
 *                     CPistol
 *                         CCOLT
 *                         CLUGER
 *                         CWEBLEY
 *                     CRocketWeapon
 *                         CBazooka
 *                         CPIAT
 *                         CPschreck
 *                     CSPRING
 *                     CSTEN
 *                     CScopedKar
 *                     CThompson
 *                     CWeaponCycler
 *             CBaseToggle
 *                 CBaseButton
 *                     CRotButton
 *                 CBaseDoor
 *                     CRotDoor
 *                 CBaseMonster
 *                     CBasePlayer
 *                     CBaseTurret
 *                         CMiniTurret
 *                         CSentry
 *                         CTurret
 *                     CCineMonster
 *                         CCineAI
 *                     CControllerHeadBall
 *                     CControllerZapBall
 *                     CCycler
 *                         CCyclerProbe
 *                         CGenericCycler
 *                     CDeadAlliedGrunt
 *                     CDeadAxisGrunt
 *                     CDeadHEV
 *                     CEnvExplosion
 *                     CFurniture
 *                     CGenericMonster
 *                     CGrenade
 *                         CBazookaShell
 *                         CMortar
 *                         CPIATShell
 *                         CPschreckShell
 *                     CGunTarget
 *                     CLegacyCineMonster
 *                         CCine2HeavyWeapons
 *                         CCine2Scientist
 *                         CCine2Slave
 *                         CCine3Barney
 *                         CCine3Scientist
 *                         CCineBarney
 *                         CCinePanther
 *                         CCineScientist
 *                     CRat
 *                     CRoach
 *                     CSquadMonster
 *                         CAlliedGrunt
 *                         CAxisGrunt
 *                         CController
 *                     CTalkMonster
 *                         CAlliedBarney
 *                         CSarge
 *                     CTestHull
 *                     CWreckage
 *                 CBasePlatTrain
 *                     CFuncPlat
 *                         CFuncPlatRot
 *                             CFuncTrackChange
 *                                 CFuncTrackAuto
 *                     CFuncTrain
 *                 CBaseTrigger
 *                     CAreaCapture
 *                     CChangeLevel
 *                     CLadder
 *                     CObjectCapture
 *                     CSandBag
 *                     CTriggerCDAudio
 *                     CTriggerCounter
 *                     CTriggerEndSection
 *                     CTriggerGravity
 *                     CTriggerHurt
 *                     CTriggerMonsterJump
 *                     CTriggerMultiple
 *                         CTriggerOnce
 *                     CTriggerPush
 *                     CTriggerSave
 *                     CTriggerTeleport
 *                 CFuncIllusionary
 *                 CFuncMortarField
 *                 CMomentaryDoor
 *                 CMomentaryRotButton
 *                 CScriptedSentence
 *                 CStateWatcher
 *             CControlPoint
 *             CEnvModel
 *         CBreakable
 *             CPushable
 *         CDoDCamera
 *         CEnvBeverage
 *         CEnvFunnel
 *         CFireAndDie
 *         CGibShooter
 *             CEnvShooter
 *         CParticleShooter
 *         CTestEffect
 *         CTriggerCamera
 *         CTriggerChangeTarget
 *         CTriggerRelay
 *         CTriggerSetPatrol
 *     CBasePlayerAmmo
 *         C30CALAmmoClip
 *         CBARAmmoClip
 *         CBRENAmmoClip
 *         CBazookaAmmo
 *         CColtAmmoClip
 *         CEnfieldAmmoClip
 *         CFG42AmmoClip
 *         CGarandAmmoClip
 *         CGreaseGunAmmoClip
 *         CK43AmmoClip
 *         CKarAmmoClip
 *         CLugerAmmoClip
 *         CM1CarbineAmmoClip
 *         CMG34AmmoClip
 *         CMG42AmmoClip
 *         CMP40AmmoClip
 *         CMP44AmmoClip
 *         CPIATAmmo
 *         CPschreckAmmo
 *         CSTENAmmoClip
 *         CScopedKarAmmoClip
 *         CSpringAmmoClip
 *         CThompsonAmmoClip
 *         CWebleyAmmoClip
 *         GenericAmmoAmerican
 *             GenericAmmoBritish
 *             GenericAmmoGerman
 *     CBaseSpectator
 *     CBeam
 *         CLaser
 *         CLightning
 *     CBubbling
 *     CButtonTarget
 *     CCineBlood
 *     CControlPointMaster
 *     CCyclerSprite
 *     CDecal
 *     CDoDDetect
 *     CDoDStatMgr
 *     CDodAmmoBox
 *     CDodParaRoundTimer
 *     CDodPointRelay
 *     CDodRoundTimer
 *     CEnvCustomize
 *     CEnvRain
 *     CEnvSpark
 *     CEnvWarpBall
 *     CFrictionModifier
 *     CFuncRotating
 *     CFuncTank
 *         CFuncTankGun
 *         CFuncTankLaser
 *         CFuncTankMortar
 *         CFuncTankRocket
 *     CFuncTankControls
 *     CFuncTrackTrain
 *     CFuncTrainControls
 *     CFuncWall
 *         CFuncConveyor
 *         CFuncMonsterClip
 *         CFuncWallToggle
 *     CGib
 *     CInfoAlias
 *     CInfoGroup
 *     CItem
 *     CItemSoda
 *     CLocation
 *     CMapMarker
 *     CMultiAlias
 *     CMultiManager
 *     CNodeEnt
 *     CNodeViewer
 *     CNullEntity
 *     CObject
 *     CPendulum
 *     CPlatTrigger
 *     CPointEntity
 *         CBaseDMStart
 *         CBlood
 *         CDoDPreRound
 *         CEnvGlobal
 *         CEnvSound
 *         CEnvState
 *         CFade
 *         CGlow
 *         CInfoIntermission
 *         CLight
 *             CEnvLight
 *         CMessage
 *         CMultiSource
 *         CPathCorner
 *         CPathTrack
 *         CRevertSaved
 *         CShake
 *         CSprite
 *         CStripWeapons
 *         CTargetCDAudio
 *         CTriggerVolume
 *     CRenderFxManager
 *     CRocketShooter
 *     CRuleEntity
 *         CRuleBrushEntity
 *             CGamePlayerZone
 *         CRulePointEntity
 *             CGameCounter
 *             CGameCounterSet
 *             CGameEnd
 *             CGamePlayerEquip
 *             CGamePlayerHurt
 *             CGamePlayerTeam
 *             CGameScore
 *             CGameTeamMaster
 *             CGameTeamSet
 *             CGameText
 *     CScoreEvent
 *     CShower
 *     CSoundEnt
 *     CSpeaker
 *     CSprayCan
 *     CTriggerChangeAlias
 *     CTriggerLightstyle
 *     CWeaponBox
 *     CWeatherSystem
 *     CWorld
 *     CWorldItem
 */
