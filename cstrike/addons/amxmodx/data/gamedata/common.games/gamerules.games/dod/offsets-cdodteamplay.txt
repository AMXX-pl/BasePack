/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CDoDTeamPlay"
			{
				"Offsets"
				{
					"m_RoundDoesCount"  // int
					{
						"type"      "integer"

						"windows"   "4"
						"linux"     "4"
						"mac"       "4"
					}

					"m_DoDCameraState"  // int
					{
						"type"      "integer"

						"windows"   "8"
						"linux"     "8"
						"mac"       "8"
					}

					"m_RoundParaCanJoin"  // int
					{
						"type"      "integer"

						"windows"   "12"
						"linux"     "12"
						"mac"       "12"
					}

					"m_flGoodToGoTime"  // float
					{
						"type"      "float"

						"windows"   "16"
						"linux"     "16"
						"mac"       "16"
					}

					"m_flRoundTime"  // float
					{
						"type"      "float"

						"windows"   "20"
						"linux"     "20"
						"mac"       "20"
					}

					"m_flCanJoinTime"  // float
					{
						"type"      "float"

						"windows"   "24"
						"linux"     "24"
						"mac"       "24"
					}

					"m_flRestartTime"  // float
					{
						"type"      "float"

						"windows"   "28"
						"linux"     "28"
						"mac"       "28"
					}

					"m_flFinalCheckTime"  // float
					{
						"type"      "float"

						"windows"   "32"
						"linux"     "32"
						"mac"       "32"
					}

					"m_flDoDMapTime"  // float
					{
						"type"      "float"

						"windows"   "36"
						"linux"     "36"
						"mac"       "36"
					}

					"m_flAlliesWaveTime"  // float
					{
						"type"      "float"

						"windows"   "40"
						"linux"     "40"
						"mac"       "40"
					}

					"m_flAxisWaveTime"  // float
					{
						"type"      "float"

						"windows"   "44"
						"linux"     "44"
						"mac"       "44"
					}

					"m_flAlliesRespawn"  // float
					{
						"type"      "float"

						"windows"   "48"
						"linux"     "48"
						"mac"       "48"
					}

					"m_flAxisRespawn"  // float
					{
						"type"      "float"

						"windows"   "52"
						"linux"     "52"
						"mac"       "52"
					}

					"m_iTeamScores"  // int[32]
					{
						"type"      "integer"
						"size"      "32"

						"windows"   "56"
						"linux"     "56"
						"mac"       "56"
					}

					"m_szTeamNames"  // char*[32]
					{
						"type"      "stringptr"
						"size"      "32"

						"windows"   "184"
						"linux"     "184"
						"mac"       "184"
					}

					"m_flSpamResetTime"  // float
					{
						"type"      "float"

						"windows"   "312"
						"linux"     "312"
						"mac"       "312"
					}

					"m_bClanMatch"  // bool
					{
						"type"      "boolean"

						"windows"   "316"
						"linux"     "316"
						"mac"       "316"
					}

					"m_bClanMatchActive"  // bool
					{
						"type"      "boolean"

						"windows"   "317"
						"linux"     "317"
						"mac"       "317"
					}

					"m_szAuthID"  // char[32]
					{
						"type"      "string"
						"size"      "32"

						"windows"   "318"
						"linux"     "318"
						"mac"       "318"
					}

					"m_vKickENT"  // CBasePlayer*
					{
						"type"      "classptr"

						"windows"   "352"
						"linux"     "352"
						"mac"       "352"
					}

					"m_vKick"  // int
					{
						"type"      "integer"

						"windows"   "356"
						"linux"     "356"
						"mac"       "356"
					}

					"m_vKickVotes"  // int
					{
						"type"      "integer"

						"windows"   "360"
						"linux"     "360"
						"mac"       "360"
					}

					"m_vKickSessionState"  // int
					{
						"type"      "integer"

						"windows"   "364"
						"linux"     "364"
						"mac"       "364"
					}

					"m_vKickTime"  // float
					{
						"type"      "float"

						"windows"   "368"
						"linux"     "368"
						"mac"       "368"
					}

					"m_rRoundStartCount"  // float
					{
						"type"      "float"

						"windows"   "372"
						"linux"     "372"
						"mac"       "372"
					}

					"m_rReadyToUnFreeze"  // int
					{
						"type"      "integer"

						"windows"   "376"
						"linux"     "376"
						"mac"       "376"
					}

					"gr_gameRules"  // int
					{
						"type"      "integer"

						"windows"   "380"
						"linux"     "380"
						"mac"       "380"
					}

					"m_GamePlayRules"  // gameplay_rules_t
					{
						"type"      "structure"

						"windows"   "384"
						"linux"     "384"
						"mac"       "384"
					}

					"m_iNumAlliesAlive"  // int
					{
						"type"      "integer"

						"windows"   "432"
						"linux"     "432"
						"mac"       "432"
					}

					"m_iNumAxisAlive"  // int
					{
						"type"      "integer"

						"windows"   "436"
						"linux"     "436"
						"mac"       "436"
					}

					"m_iNumAlliesOnTeam"  // int
					{
						"type"      "integer"

						"windows"   "440"
						"linux"     "440"
						"mac"       "440"
					}

					"m_iNumAxisOnTeam"  // int
					{
						"type"      "integer"

						"windows"   "444"
						"linux"     "444"
						"mac"       "444"
					}

					"m_Camera"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "448"
						"linux"     "448"
						"mac"       "448"
					}

					"m_usVoice"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "450"
						"linux"     "450"
						"mac"       "450"
					}

					"m_bodyDamage"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "452"
						"linux"     "452"
						"mac"       "452"
					}

					"m_roundRestartSound"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "454"
						"linux"     "454"
						"mac"       "454"
					}

					"m_gerVoice"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "456"
						"linux"     "456"
						"mac"       "456"
					}

					"m_Pain"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "458"
						"linux"     "458"
						"mac"       "458"
					}

					"m_Smoke"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "460"
						"linux"     "460"
						"mac"       "460"
					}

					"m_Prone"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "462"
						"linux"     "462"
						"mac"       "462"
					}

					"m_BloodSprite"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "464"
						"linux"     "464"
						"mac"       "464"
					}

					"m_BloodStream"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "466"
						"linux"     "466"
						"mac"       "466"
					}

					"m_BulletTracers"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "468"
						"linux"     "468"
						"mac"       "468"
					}

					"m_SparkShower"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "470"
						"linux"     "470"
						"mac"       "470"
					}

					"m_ScreenFades"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "472"
						"linux"     "472"
						"mac"       "472"
					}

					"m_BubbleTrails"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "474"
						"linux"     "474"
						"mac"       "474"
					}

					"m_Bubbles"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "476"
						"linux"     "476"
						"mac"       "476"
					}

					"m_Shards"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "478"
						"linux"     "478"
						"mac"       "478"
					}

					"m_Explosion"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "480"
						"linux"     "480"
						"mac"       "480"
					}

					"m_PopHelmet"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "482"
						"linux"     "482"
						"mac"       "482"
					}

					"m_RoundReset"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "484"
						"linux"     "484"
						"mac"       "484"
					}

					"m_RocketTrail"  // short unsigned int
					{
						"type"      "short"
						"unsigned"  "1"

						"windows"   "486"
						"linux"     "486"
						"mac"       "486"
					}

					"sNextMap"  // char[32]
					{
						"type"      "string"
						"size"      "32"

						"windows"   "488"
						"linux"     "488"
						"mac"       "488"
					}

					"MapChangeFromTime"  // int
					{
						"type"      "integer"

						"windows"   "520"
						"linux"     "520"
						"mac"       "520"
					}

					"m_bIsRoundFrozen"  // bool
					{
						"type"      "boolean"

						"windows"   "524"
						"linux"     "524"
						"mac"       "524"
					}

					"m_DisableDeathMessages"  // BOOL
					{
						"type"      "integer"

						"windows"   "528"
						"linux"     "528"
						"mac"       "528"
					}

					"m_DisableDeathPenalty"  // BOOL
					{
						"type"      "integer"

						"windows"   "532"
						"linux"     "532"
						"mac"       "532"
					}

					"m_pParaTimer"  // CDodParaRoundTimer*
					{
						"type"      "classptr"

						"windows"   "536"
						"linux"     "536"
						"mac"       "536"
					}

					"m_RoundState"  // int
					{
						"type"      "integer"

						"windows"   "540"
						"linux"     "540"
						"mac"       "540"
					}

					"m_bRoundRestarting"  // BOOL
					{
						"type"      "integer"

						"windows"   "544"
						"linux"     "544"
						"mac"       "544"
					}

					"m_bAwaitingReadyRestart"  // BOOL
					{
						"type"      "integer"

						"windows"   "548"
						"linux"     "548"
						"mac"       "548"
					}

					"m_bHeardAlliesReady"  // BOOL
					{
						"type"      "integer"

						"windows"   "552"
						"linux"     "552"
						"mac"       "552"
					}

					"m_bHeardAxisReady"  // BOOL
					{
						"type"      "integer"

						"windows"   "556"
						"linux"     "556"
						"mac"       "556"
					}

					"m_flRestartRoundTime"  // float
					{
						"type"      "float"

						"windows"   "560"
						"linux"     "560"
						"mac"       "560"
					}

					"m_fLogScoresTime"  // float
					{
						"type"      "float"

						"windows"   "564"
						"linux"     "564"
						"mac"       "564"
					}

					"m_flIntermissionEndTime"  // float
					{
						"type"      "float"

						"windows"   "568"
						"linux"     "568"
						"mac"       "568"
					}

					"m_iEndIntermissionButtonHit"  // BOOL
					{
						"type"      "integer"

						"windows"   "572"
						"linux"     "572"
						"mac"       "572"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CGameRules
 *     CDoDTeamPlay
 */
